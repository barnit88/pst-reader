//using Core.PST.Headers.Unicode;
//using Core.PST.Pages.Base;
//using Core.PST.Pages.BTree;
//using System.IO.MemoryMappedFiles;

//namespace Core.PST.Pages.Unicode
//{
//    //For now assuming this as BTreePage
//    public class UnicodePage : BTreePage
//    {
//        /// <summary>
//        /// Type of Page
//        /// 
//        ///   - Block BTree Page
//        ///   - Node BTree Page
//        ///   - Free Map Page
//        ///   - Allocation Page Map Page
//        ///   - Allocation Map Page
//        ///   - Free Page Map Page
//        ///   - Density List Page
//        /// 
//        /// </summary>
//        public PageType PageType { get; set; }
//        /// <summary>
//        /// NDB Layer Contains two BTrees Node BTree and Block BTree
//        /// This flag determines we are accessing the page for 
//        /// Node BTree.
//        /// </summary>
//        public bool IsNodePage { get; set; }
//        /// <summary>
//        /// NDB Layer Contains two BTrees Node BTree and Block BTree
//        /// This flag determines we are accessing the page for 
//        /// Block BTree
//        /// </summary>
//        public bool IsBlockPage { get; set; }
//        public UnicodePage(UnicodeBREF bref, MemoryMappedFile mmf)
//        {
//            using (MemoryMappedViewAccessor view =
//                mmf.CreateViewAccessor((long)bref.Ib, this.PageSize))
//            {
//                byte[] pageData = new byte[16];
//                view.ReadArray(0, pageData, this.PageSize - 1 - 16, this.PageSize - 1);
//                this.PageTrailer = new UnicodePageTrailer(pageTrailerByte: pageData, bref: bref);
//            }
//        }

//        private void ConfigurecbEnt(byte cLevel)
//        {
//            if((int)cLevel == 0) { }
                
//        }
//    }
//}
